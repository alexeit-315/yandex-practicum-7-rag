#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç RAG-–±–æ—Ç–∞ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π LLM
"""

import argparse
import sys
from rag_pipeline import rag_pipeline

def run_console_bot():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π REPL"""
    print("=" * 60)
    print("ü§ñ –õ–æ–∫–∞–ª—å–Ω—ã–π RAG –ë–û–¢ (LLM + –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫)")
    print("=" * 60)
    print("–î–ª—è –≤—ã—Ö–æ–¥–∞: 'quit', 'exit' –∏–ª–∏ Ctrl+C")
    print("-" * 60)

    while True:
        try:
            query = input("\nüéØ –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()

            if query.lower() in ['quit', 'exit', 'q']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            if not query:
                continue

            response = rag_pipeline.process_query(query)

            print(f"\n{'='*60}")
            print("ü§ñ –û–¢–í–ï–¢:")
            print(response)
            print(f"{'='*60}")

        except KeyboardInterrupt:
            print("\n\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def run_test_queries():
    """–¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã"""
    test_queries = [
        "–ö—Ç–æ —Ç–∞–∫–æ–π –©—ã–± –®—É—Ä—Ä—É–º—Ö–µ—Ä?",
        "–ü–æ—á–µ–º—É –ó–≤–µ–∑–¥—É –®—Ä–µ–∫–ª–∏—Ö–µ—Ä—Ç–æ–¥–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é?",
        "–û–ø–∏—à–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é —Ä–µ–ª—å—Å–æ—Ç—Ä–æ—Ä–∞",
        "–ö—Ç–æ —Ç–∞–∫–æ–π –ö—Ä—ã—à –®–∫–∞–π–∑—é–∫—ë—Ä?",
        "–ö—Ç–æ —Ç–∞–∫–æ–π –ì–∑–∞–Ω–¥–æ –°—ë—Ç—Ç?",
        "–ß–µ–º –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –ó—ë–Ω–∑—é–º–∞–π—Å–∫–æ-—Ñ—ã—Ä—Ö—Å–∫–∞—è –≤–æ–π–Ω–∞?",
        "–ß—Ç–æ –ª—É—á—à–µ –®–∞—Ö–∏–Ω—à–∞—Ö–∏—è –∏–ª–∏ –ù–∞—Ä–æ–¥–æ–≤–ª–∞—Å—Ç–∞?",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –±–æ–º–±–∞?"
    ]

    print("üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã:")
    print("-" * 40)

    for i, query in enumerate(test_queries, 1):
        print(f"{i}. {query}")
        response = rag_pipeline.process_query(query)
        print(f"   –û—Ç–≤–µ—Ç: {response[:150]}...\n")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    parser = argparse.ArgumentParser(description="RAG –ë–æ—Ç —Å –ª–æ–∫–∞–ª—å–Ω–æ–π LLM (—á–µ—Ä–µ–∑ Ollama)")
    parser.add_argument("--query", "-q", help="–ï–¥–∏–Ω–∏—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å")
    parser.add_argument("--test", "-t", action="store_true", help="–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")

    args = parser.parse_args()

    try:
        if args.test:
            run_test_queries()
        elif args.query:
            response = rag_pipeline.process_query(args.query)
            print(f"–í–æ–ø—Ä–æ—Å: {args.query}")
            print(f"–û—Ç–≤–µ—Ç: {response}")
        else:
            run_console_bot()

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
